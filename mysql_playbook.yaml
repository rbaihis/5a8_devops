---
- name: Manage MySQL Docker Compose setup
  hosts: prodVm
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3  # Ensure you're using Python 3
    compose_dir: ~/mysql_docker_setup  
    compose_file_path: "{{ compose_dir }}/docker-compose.yml"  
    db_name: timesheet-devops-db
    db_user: root
    db_password: ""  
    root_password: ""  

  tasks:
    - name: Install pip3 if not present (Ubuntu/Debian)
      apt:
        name: python3-pip
        state: present
      when: ansible_facts['os_family'] == 'Debian'

    - name: Install pip3 if not present (RHEL/CentOS)
      yum:
        name: python3-pip
        state: present
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Ensure Docker SDK for Python is installed
      pip:
        name: docker
        state: present
      become: yes

    - name: Install Docker Compose Python library
      pip:
        name: docker-compose
        state: present
        become: yes


    - name: Create Docker Compose directory
      file:
        path: "{{ compose_dir }}"
        state: directory
        mode: '0755'

    - name: Create Docker Compose file
      copy:
        dest: "{{ compose_file_path }}"
        content: |
          version: '3.8'
          services:
            mysql:
              image: mysql:5.7
              environment:
                MYSQL_ALLOW_EMPTY_PASSWORD: yes
                MYSQL_ROOT_PASSWORD: {{ root_password }}
                MYSQL_DATABASE: {{ db_name }}
                MYSQL_USER: {{ db_user }}
                MYSQL_PASSWORD: {{ db_password }}
              ports:
                - "3306:3306"
              volumes:
                - mysql_data:/var/lib/mysql

          volumes:
            mysql_data:

    - name: Ensure Docker Compose is up
      docker_compose:
        project_src: "{{ compose_dir }}"
        state: present

    - name: Wait for MySQL to be ready
      wait_for:
        port: 3306
        timeout: 60
        state: started

    # - name: Create a table if it doesn't exist
    #   mysql_query:
    #     login_user: "{{ db_user }}"
    #     login_password: "{{ db_password }}"
    #     db: "{{ db_name }}"
    #     query: "CREATE TABLE IF NOT EXISTS my_table (id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255));"
    #   register: query_result

    # - name: Output the table creation status
    #   debug:
    #     msg: "Table created or already exists."
    #   when: query_result.changed == false
